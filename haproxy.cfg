global
 # Enable HAProxy runtime API
    stats socket :9999 level admin expose-fd listeners

    #stats socket /tmp/haproxy level admin
#     stats socket /run/haproxy/admin.sock level admin
# 	server-state-file /var/lib/haproxy/haproxy_server_state
	stats timeout 30s
	user root #haproxy
	group root #haproxy
	chroot /var/lib/haproxy

    ca-base /etc/ssl
    crt-base /etc/ssl
#     tune.ssl.default-dh-param 2048
#     tune.http.logurilen 5120
    ssl-default-bind-options no-sslv3
#     maxconn 20000
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

defaults
	mode	http
    timeout client 10s
    timeout server 600s #because of huge XML POST requests
    timeout connect 10s #should be OK
#     timeout queue 60s #waiting time for queued requests
#     timeout check 1s
#     load-server-state-from-file global

#     option forwardfor
    #option httplog #overrides by log-format
    option dontlognull
    option http-no-delay
#     no option tcp-smart-accept
#
    log global
#     log 127.0.0.1 len 5120 local0
#     log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %TR/%Tw/%Tc/%T
#
#     fullconn 10000

    # prefered for very long sessions
#     balance leastconn

    # never fail on address resolution
#     default-server init-addr libc,last,none

# ---------------------------------------- frontends --------------------------------------------- #
frontend public
    #mode http

    # listen for HTTP traffic
    bind :80

    #     bind    *:8080
    #bind   10.76.229.207:80
    #bind   *:443 ssl crt ./portal_infobip_com_2020.pem crt ./wildcard_infobip_com_2020.pem crt ./wildcard_businessmessaging_co_uk.pem crt ./tele2messaging_com.pem crt ./movistarsms.infobip_portal.com.pem
    #capture request header X-Balancing-Hash len 15
    #capture request header X-Forwarded-Host len 30
    #capture request header Host len 32

    #acl is_stats path_beg /stats /statistic
    #use_backend stats_backend if is_stats

    # listen for HTTPS traffic, load certificates from a directory
    bind :443 ssl crt /etc/haproxy/certs/
    #http-request add-header X-Forwarded-Proto https

    # redirect HTTP to HTTPS
    http-request redirect scheme https unless { ssl_fc }

    # ACL
    acl certbot_acl path_beg /.well-known/acme-challenge/

    # Backends
    use_backend certbot_backend if certbot_acl

    default_backend web_backend

# # HTTP frontend
# frontend http
#     bind :80
# #     http-request redirect scheme https unless { ssl_fc }
#
#     # ACL
#     acl certbot_acl path_beg /.well-known/acme-challenge/
#
#     # Backends
#     use_backend certbot_backend if certbot_acl
#
#     default_backend web_backend
#
# # HTTPS frontend
# frontend https
#     bind :443 ssl crt /etc/haproxy/certs/
#     http-request add-header X-Forwarded-Proto https
#
#     # ACL
#     acl certbot_acl path_beg /.well-known/acme-challenge/
#
#     # Backends
#     use_backend certbot_backend if certbot_acl
#
#     default_backend web_backend

# Docker resolver
#resolvers docker
#    nameserver dns1 127.0.0.11:53




# ---------------------------------------- backends ---------------------------------------------- #
# Certbot backend
backend certbot_backend
    #server certbot certbot:380
    #server certbot 127.0.0.1:8888
    server certbot 95.163.234.44:8888

backend web_backend
	balance roundrobin
	#server balancer 127.0.0.1:8081
	server server1 95.163.234.44:8081

## BALANCER STATISTIC
backend stats_backend
	server Local 127.0.0.1:8182

listen http_stats
	bind *:8182
    stats enable
	stats uri /haproxy?stats
    monitor-uri /haproxy_test
